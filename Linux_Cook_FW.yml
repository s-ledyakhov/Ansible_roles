---
- hosts: localhost
  gather_facts: no
  tasks:
    - name: Wait VM
      ansible.builtin.pause:
        minutes: 2
      when: state == "present"

- hosts: all
  ignore_unreachable: true
  become: true

  tasks:
    - name: Configure FW
      block:
        - name: enable forwarding
          shell: "sysctl -w net.ipv4.ip_forward=1 >> /etc/sysctl.conf"

        - name: Long form task does not
          ansible.builtin.replace:
            path: /etc/hosts
            before: "# The following lines are desirable for IPv6 capable hosts"
            regexp: '^127.0.0.1\tlocalhost$'
            replace: '127.0.0.1\t{{prefix}}-fw\tlocalhost'

        - name: Update resolv.conf
          ansible.builtin.shell: sudo sed -i "s/nameserver 10.{{ s_oct }}.3.10/nameserver 172.18.4.210/g" /etc/resolv.conf

        - name: Update repositories cache and install "iptables" package
          ansible.builtin.apt:
            name: iptables
            update_cache: yes

        - name: Upgrade all packages on servers
          apt: upgrade=dist force_apt_get=yes

        - name: Check if a reboot is needed on all servers
          register: reboot_required_file
          stat: path=/var/run/reboot-required get_md5=no

        - name: Reboot the box if kernel updated
          reboot:
            msg: "Reboot initiated by Ansible for kernel updates"
            connect_timeout: 5
            reboot_timeout: 300
            pre_reboot_delay: 0
            post_reboot_delay: 30
            test_command: uptime
          when: reboot_required_file.stat.exists

        - name: Rename interface if they similar like "enp3s0" or "enp0s3"
          script: templates/fw/ch_int_name.sh
          when: '"enp3s0" in ansible_default_ipv4.interface or "enp0s3" in ansible_default_ipv4.interface'

        - name: remove routes file
          file:
            path: /etc/network/if-up.d/routes
            state: absent

        - name: static interfaces
          template:
            src: templates/fw/fw_network.j2
            dest: /etc/network/interfaces
            owner: root
            group: root
            mode: "0644"

        - name: disable cloudinit network config
          template:
            src: templates/fw/95-debian-network-config.j2
            dest: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
            owner: root
            group: root
            mode: "0644"

        - name: Clear cloudinit net state
          shell: "cp /dev/null /etc/network/interfaces.d/50-cloud-init"

        - name: iptables rules copy
          template:
            src: templates/fw/iptables.up.j2
            dest: /etc/iptables.up.rules
            owner: root
            group: root
            mode: "0644"

        - name: make iptables persistent
          template:
            src: templates/fw/iptables.j2
            dest: /etc/network/if-pre-up.d/iptables
            owner: root
            group: root
            mode: "0744"

        - name: Rebooting the router
          reboot:
            reboot_timeout: 360

      when: state == "present" and create_net_dev == "yes"

- hosts: all
  ignore_unreachable: true
  become: true

  tasks:
    - name: Install Suricata FW
      block:
        - name: install backports repo
          template:
            src: templates/suricata/repo.j2
            dest: /etc/apt/sources.list.d/backports.list
            owner: root
            group: root
            mode: "0644"

        - name: Update resolv.conf
          ansible.builtin.shell: sudo sed -i "s/nameserver 10.{{ s_oct }}.3.10/nameserver 172.18.4.210/g" /etc/resolv.conf

        - name: apt update
          apt:
            update_cache: yes
            cache_valid_time: 3600

        - name: install suricata 6.0
          apt:
            name: suricata
            state: latest
            #        default_release: buster-backports
            update_cache: no

        - name: config suricate
          ansible.builtin.copy:
            src: templates/suricata/suricata.yaml
            dest: /etc/suricata/suricata.yaml
            owner: root
            group: root
            mode: "0644"

        - name: Extract suricata rules
          ansible.builtin.unarchive:
            src: templates/suricata/rules.tgz
            dest: /etc/suricata/rules

        - name: custom.rules template
          template:
            src: templates/suricata/custom.rules.j2
            dest: /etc/suricata/rules/custom.rules
            owner: root
            group: root
            mode: "0644"

        - name: add logrotate
          template:
            src: templates/suricata/logrotate.j2
            dest: /etc/logrotate.d/suricata
            owner: root
            group: root
            mode: "0644"

        - name: cmd to back monitoring
          ansible.builtin.shell: sed -i "s/ExecStart=.*/ExecStart=\/usr\/bin\/suricata \-D \--af-packet \-c \/etc\/suricata\/suricata\.yaml \--pidfile \/run\/suricata\.pid/g" ./suricata.service
          args:
            chdir: /usr/lib/systemd/system

        - name: configure rsyslogd
          shell: "echo '*.* @10.{{ s_oct }}.3.100:514' >> /etc/rsyslog.conf"

        - name: configure rsyslogd
          shell: "echo '*.* @10.{{ s_oct }}.3.98:5144' >> /etc/rsyslog.conf"

        - name: restart rsyslog service
          ansible.builtin.systemd:
            state: restarted
            name: rsyslog

        - name: restart suricata service
          ansible.builtin.systemd:
            state: restarted
            daemon_reload: yes
            name: suricata

      when: state == "present" and create_net_dev == "yes"
